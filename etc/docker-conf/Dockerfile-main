# -*- dockerfile -*-
FROM pombase/web-base:v66
ARG version

LABEL maintainer="Kim Rutherford <kim@pombase.org>"

ARG target
ARG database_name
ENV ANALYTICS_ID=UNSET
ENV GOOGLE_TAG_MANAGER_ID=UNSET
ENV DATABASE_NAME=pombase
ENV APP_DEPLOY_CONFIG="{ mode: 'prod' }"

# see: https://solr.apache.org/news.html#apache-solr-affected-by-apache-log4j-cve-2021-44228
ENV LOG4J_FORMAT_MSG_NO_LOOKUPS=true

USER pombase

WORKDIR /pombase

COPY --chown=pombase:pombase pombase-chado-json /pombase/pombase-chado-json
RUN mkdir bin
RUN (curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable && \
     . "$HOME/.cargo/env" && \
     (cd pombase-chado-json; rustup default stable; cargo build --release && cp target/release/pombase-server /pombase/bin/) && \
     rm -r /pombase/pombase-chado-json $HOME/.rustup $HOME/.cargo)

USER root

RUN mkdir -p /var/www/html/api/v1/dataset/latest/; ln -s /pombase/jbrowse /var/www/html/jbrowse

RUN mkdir /pombase/misc

COPY --chown=pombase:pombase curation/data_files /pombase/curation-data-files

COPY --chown=pombase:pombase web-json /var/www/html/web-json
COPY --chown=pombase:pombase misc/sitemap.txt /var/www/html/
COPY --chown=pombase:pombase misc/gene_expression_table.tsv /pombase/misc/
COPY --chown=pombase:pombase gff /pombase/gff
COPY --chown=pombase:pombase chromosome_fasta /pombase/chromosome_fasta
COPY --chown=pombase:pombase feature_sequences /pombase/feature_sequences
RUN gzip -d /pombase/feature_sequences/*.gz

COPY --chown=pombase:pombase data_files /pombase/data_files

COPY --chown=pombase:pombase Rocket.toml /pombase/

COPY --chown=pombase:pombase pombase-python-web /pombase/pombase-python-web

COPY --chown=pombase:pombase main_config.json /pombase/main_config.json
RUN (cd /var/www/html/api/v1/dataset/latest; ln -s /var/www/html/web-json data)
RUN chown -R pombase:pombase /var/www/html

COPY --chown=pombase:pombase conf/solr-terms-schema-commands.txt /pombase/solr-terms-schema-commands.txt
COPY --chown=pombase:pombase conf/solr-refs-schema-commands.txt /pombase/solr-refs-schema-commands.txt
COPY --chown=pombase:pombase conf/solr-genes-schema-commands.txt /pombase/solr-genes-schema-commands.txt
COPY --chown=pombase:pombase conf/solr-alleles-schema-commands.txt /pombase/solr-alleles-schema-commands.txt
COPY --chown=pombase:pombase conf/solr-docs-schema-commands.txt /pombase/solr-docs-schema-commands.txt

USER pombase

COPY --chown=pombase:pombase pombase-website /pombase/pombase-website

COPY --chown=pombase:pombase trackList.json /pombase/jbrowse/data/trackList.json
COPY --chown=pombase:pombase minimal_jbrowse_track_list.json /pombase/pombase-website/minimal_jbrowse_track_list.json
COPY --chown=pombase:pombase jbrowse_track_metadata.csv /pombase/jbrowse/data/jbrowse_track_metadata.csv

RUN (cd pombase-website; \
    ./etc/update_generated_files.sh /pombase/main_config.json \
    /pombase/pombe_data)

RUN cd ./solr-8.11.1/; ./bin/solr start -force -m 4g && \
    ./bin/solr create_core -force -c terms && \
    ./bin/solr create_core -force -c refs && \
    ./bin/solr create_core -force -c genes && \
    ./bin/solr create_core -force -c alleles && \
    ./bin/solr create_core -force -c docs && \
    curl http://localhost:8983/solr/terms/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}' && \
    curl http://localhost:8983/solr/refs/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}' && \
    curl http://localhost:8983/solr/genes/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}' && \
    curl http://localhost:8983/solr/alleles/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}' && \
    curl http://localhost:8983/solr/docs/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}' && \
    while read command; do curl -X POST -H 'Content-type:application/json' -d "$command" http://localhost:8983/solr/terms/schema; done < /pombase/solr-terms-schema-commands.txt && \
    while read command; do curl -X POST -H 'Content-type:application/json' -d "$command" http://localhost:8983/solr/refs/schema; done < /pombase/solr-refs-schema-commands.txt && \
    while read command; do curl -X POST -H 'Content-type:application/json' -d "$command" http://localhost:8983/solr/genes/schema; done < /pombase/solr-genes-schema-commands.txt && \
    while read command; do curl -X POST -H 'Content-type:application/json' -d "$command" http://localhost:8983/solr/alleles/schema; done < /pombase/solr-alleles-schema-commands.txt && \
    while read command; do curl -X POST -H 'Content-type:application/json' -d "$command" http://localhost:8983/solr/docs/schema; done < /pombase/solr-docs-schema-commands.txt && \
    gzip -d < /var/www/html/api/v1/dataset/latest/data/solr_data/terms.json.gz | ./bin/post -c terms -type application/json -d && \
    gzip -d < /var/www/html/api/v1/dataset/latest/data/solr_data/references.json.gz | ./bin/post -c refs -type application/json -d && \
    gzip -d < /var/www/html/api/v1/dataset/latest/data/solr_data/genes.json.gz | ./bin/post -c genes -type application/json -d && \
    gzip -d < /var/www/html/api/v1/dataset/latest/data/solr_data/alleles.json.gz | ./bin/post -c alleles -type application/json -d && \
    ./bin/post -c docs -type application/json -d < /pombase/pombase-website/src/app/config/docs.json && \
    ./bin/solr stop && \
    rm -rf /var/www/html/api/v1/dataset/latest/data/solr_data

RUN mkdir /pombase/.npm-global; npm config set prefix "/pombase/.npm-global"

ENV PATH="/pombase/.npm-global/bin:$PATH"


RUN (cd pombase-website; ln -fs /pombase/main_config.json .; \
     cp etc/update_vars.sh /pombase/ && \
     npm install -g yarn; \
     yarn; \
     ./etc/build_app.sh $target && cp -r dist/* /var/www/html/ && \
     cp dist/assets/$database_name/* /var/www/html/assets/) && \
     rm -rf /pombase/pombase-website /pombe/.npm-global

RUN (cd /var/www/html/jbrowse; \
    ./bin/prepare-refseqs.pl --fasta /pombase/chromosome_fasta/*_all_chromosomes.fa.gz \
      --trackLabel 'refseqs' --key 'DNA sequence'; \
    ./bin/flatfile-to-json.pl --gff /pombase/gff/*_all_chromosomes_forward_strand.gff3 \
      --maxLookback 9999999 --trackType CanvasFeatures --trackLabel 'Forward strand features'; \
    ./bin/flatfile-to-json.pl --gff /pombase/gff/*_all_chromosomes_reverse_strand.gff3 \
      --maxLookback 9999999 --trackType CanvasFeatures --trackLabel 'Reverse strand features')

COPY --chown=pombase:pombase conf/circus.ini.template circus.ini.template
COPY --chown=pombase:pombase conf/start_all.sh start_all.sh
COPY --chown=pombase:pombase conf/docker-healthcheck docker-healthcheck

RUN (cd /var/www/html/jbrowse; ./bin/generate-names.pl)

USER root

RUN rm -rf /*/.rustup /*/.cargo /*/.cache /*/.cpan*

RUN echo $version > $HOME/pombase_version

# for testing:
EXPOSE 8983
EXPOSE 8500
EXPOSE 8999

HEALTHCHECK --start-period=10s --interval=10s --timeout=20s --retries=10 \
  CMD /pombase/docker-healthcheck

CMD ./start_all.sh

# server setup:
# docker service create --publish 8501:8500 --env GOOGLE_TAG_MANAGER_ID=XXXXXXX --env ANALYTICS_ID=ANALYTICS_ID=UA-XXXXXX-X --env DJANGO_SECRET_KEY=XXXXXXXX --env ROCKET_PROFILE=release --env ROCKET_SECRET_KEY=XXXXXXX --name main-1 --replicas 1 pombase/web:2019-03-27-prod
